syntax = "proto3";
import "Struct.proto";

service GossipService {
	rpc Gossip(GossipRequest) returns (GossipReply) {}
}

message TimeStamp {
	string key = 1;
	repeated DIDAVersion timestamp = 2;
}

message GossipRequest {
	int32 replicaId = 1;
	repeated TimeStamp replicaTimestamp = 2;
	repeated DIDARecord updateLogs = 3;
}

message GossipReply {
	repeated TimeStamp replicaTimestamp = 1;
}

service UpdateIfValueIsService {
	rpc LockAndPull(LockAndPullRequest) returns (LockAndPullReply) {}
	rpc CommitPhase(CommitPhaseRequest) returns (CommitPhaseReply) {}
}

message LockAndPullRequest {
	string key = 1;
}

message LockAndPullReply {
	DIDARecord record = 1;
	bool alreadyLocked = 2;
}

message CommitPhaseRequest {
	bool canCommit = 1;
	DIDARecord record = 2;
}

message CommitPhaseReply {
	bool okay = 1;
}
